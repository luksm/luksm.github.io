{"componentChunkName":"component---src-templates-blog-post-js","path":"/easy-commit-message/","result":{"data":{"site":{"siteMetadata":{"title":"in contemplation"}},"markdownRemark":{"id":"bc665361-dfaa-5f13-88d2-79372ff095c6","excerpt":"If you are following gitflow or something similar you are already naming all of your branches with a lot of the information you would need to keep track of the…","html":"<p>If you are following <a href=\"https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow\">gitflow</a> or something similar you are already naming all of your branches with a lot of the information you would need to keep track of the changes.</p>\n<p>At my company we use JIRA to keep track of our changes, so I always include too the ticket number to the branch I’m creating, so my branches endup looking like:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout feat/JIRA-0000</code></pre></div>\n<p>But when it was time to commit, and I wanted that same information included in my messages, I had to type it again. And there is nothing that goes against a developer than having to type things more than once.</p>\n<p>After diving a bit into git’s documentation, I found what I was looking for, a good hook that would allow me to easily move the information from my branch name into my commit messages, while allowing me to format them however I wanted.</p>\n<p>To get the branch name we can always do something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> symbolic-ref --short HEAD</code></pre></div>\n<p>Using <code class=\"language-text\">basename</code> and <code class=\"language-text\">dirname</code> would allow me to split my information and format my commits as I would like them to be formatted.</p>\n<p>Here’s the complete script. It also skips all the regular “trunk” branches.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span><span class=\"token variable\">)</span></span> -eq <span class=\"token string\">\"Darwin\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token assign-left variable\">NL</span><span class=\"token operator\">=</span><span class=\"token string\">$'<span class=\"token entity\" title=\"\\\\\">\\\\</span><span class=\"token entity\" title=\"\\n\">\\n</span>'</span> <span class=\"token operator\">||</span> <span class=\"token assign-left variable\">NL</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span>\n\n<span class=\"token comment\"># Skip on amending messages</span>\n<span class=\"token assign-left variable\">IS_AMEND</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> -ocommand<span class=\"token operator\">=</span> -p <span class=\"token environment constant\">$PPID</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -e <span class=\"token string\">'--amend'</span><span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token string\">\"<span class=\"token variable\">$IS_AMEND</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token comment\"># Include any branches for which you wish to disable this script</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token string\">\"<span class=\"token variable\">$BRANCHES_TO_SKIP</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">BRANCHES_TO_SKIP</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>main master develop release<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">fi</span>\n\n  <span class=\"token comment\"># Get the current branch name and check if it is excluded</span>\n  <span class=\"token assign-left variable\">BRANCH_NAME</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">git</span> symbolic-ref --short HEAD<span class=\"token variable\">)</span></span>\n  <span class=\"token assign-left variable\">BRANCH_EXCLUDED</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"%s<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span> <span class=\"token string\">\"<span class=\"token variable\">${BRANCHES_TO_SKIP<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -c <span class=\"token string\">\"^<span class=\"token variable\">$BRANCH_NAME</span>$\"</span><span class=\"token variable\">)</span></span>\n\n  <span class=\"token comment\"># Trim it down to get the parts we're interested in</span>\n  <span class=\"token assign-left variable\">TRIMMED</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $BRANCH_NAME <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> -e <span class=\"token string\">'s:^\\([^-]*-[^-]*\\)-.*:\\1:'</span><span class=\"token variable\">)</span></span>\n\n  <span class=\"token comment\"># If it isn't excluded, preprend the trimmed branch identifier to the given message </span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -n <span class=\"token string\">\"<span class=\"token variable\">$BRANCH_NAME</span>\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span>  <span class=\"token operator\">!</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$BRANCH_EXCLUDED</span> -eq <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\n    <span class=\"token assign-left variable\">TICKET</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> $TRIMMED <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> <span class=\"token string\">'[:lower:]'</span> <span class=\"token string\">'[:upper:]'</span><span class=\"token variable\">)</span></span>\n    <span class=\"token assign-left variable\">CHANGE</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> $TRIMMED <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> <span class=\"token string\">'[:upper:]'</span> <span class=\"token string\">'[:lower:]'</span><span class=\"token variable\">)</span></span>\n\n    <span class=\"token function\">sed</span> -i.bak -e <span class=\"token string\">\"1s/^/<span class=\"token variable\">$TICKET</span> <span class=\"token variable\">$CHANGE</span>: /\"</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token variable\">$1</span>\n  <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span>\n</code></pre></div>\n<p>Usage in the end, can be done though the command line or any UI. When doing</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">'My commit message'</span></code></pre></div>\n<p>The output will be</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">JIRA-0000 feat: My commit message</code></pre></div>\n<p>Same thing if you are commiting from any UI.</p>","frontmatter":{"title":"Easy commit message","date":"May 17, 2022","description":"How to create commit messages from your branch name"}},"previous":null,"next":null},"pageContext":{"id":"bc665361-dfaa-5f13-88d2-79372ff095c6","previousPostId":null,"nextPostId":null}},"staticQueryHashes":["1505054316","2841359383"]}